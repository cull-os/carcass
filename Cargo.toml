[workspace]
members = [
  "auxvec",

  "dup",
  "dup/macros",

  "cab",
  "cab/fuzz",
  "cab/runtime",
  "cab/syntax",
  "cab/task",
  "cab/util",

  "con",

  "cyn",

  "ranged",

  "ust",
]
resolver = "3"

metadata.crane.name = "cab"

[workspace.package]
authors    = [ "RGBCube <git@rgbcu.be>" ]
edition    = "2024"                               # Keep in sync with .rustfmt.toml.
license    = "IMT-ee1e96f741ba9e18"
publish    = false
repository = "https://github.com/cull-os/carcass"
version    = "0.0.1"

[workspace.lints.clippy]
pedantic = { level = "warn", priority = -1 }

blanket_clippy_restriction_lints = "allow"
restriction                      = { level = "warn", priority = -1 }

alloc_instead_of_core             = "allow"
allow_attributes_without_reason   = "allow"
arbitrary_source_item_ordering    = "allow"
arithmetic_side_effects           = "allow"
as_conversions                    = "allow"
as_pointer_underscore             = "allow"
as_underscore                     = "allow"
big_endian_bytes                  = "allow"
clone_on_ref_ptr                  = "allow"
dbg_macro                         = "allow"
disallowed_script_idents          = "allow"
else_if_without_else              = "allow"
error_impl_error                  = "allow"
exhaustive_enums                  = "allow"
exhaustive_structs                = "allow"
expect_used                       = "allow"
field_scoped_visibility_modifiers = "allow"
float_arithmetic                  = "allow"
host_endian_bytes                 = "allow"
impl_trait_in_params              = "allow"
implicit_return                   = "allow"
indexing_slicing                  = "allow"
inline_asm_x86_intel_syntax       = "allow"
integer_division                  = "allow"
integer_division_remainder_used   = "allow"
large_include_file                = "allow"
let_underscore_must_use           = "allow"
let_underscore_untyped            = "allow"
little_endian_bytes               = "allow"
map_err_ignore                    = "allow"
match_same_arms                   = "allow"
missing_assert_message            = "allow"
missing_docs_in_private_items     = "allow"
missing_errors_doc                = "allow"
missing_inline_in_public_items    = "allow"
missing_panics_doc                = "allow"
missing_trait_methods             = "allow"
mod_module_files                  = "allow"
multiple_inherent_impl            = "allow"
mutex_atomic                      = "allow"
mutex_integer                     = "allow"
new_without_default               = "allow"
non_ascii_literal                 = "allow"
panic                             = "allow"
panic_in_result_fn                = "allow"
partial_pub_fields                = "allow"
print_stderr                      = "allow"
print_stdout                      = "allow"
pub_use                           = "allow"
pub_with_shorthand                = "allow"
pub_without_shorthand             = "allow"
question_mark_used                = "allow"
ref_patterns                      = "allow"
renamed_function_params           = "allow"
same_name_method                  = "allow"
semicolon_outside_block           = "allow"
separated_literal_suffix          = "allow"
shadow_reuse                      = "allow"
shadow_same                       = "allow"
shadow_unrelated                  = "allow"
single_call_fn                    = "allow"
single_char_lifetime_names        = "allow"
single_match_else                 = "allow"
std_instead_of_alloc              = "allow"
std_instead_of_core               = "allow"
string_add                        = "allow"
string_slice                      = "allow"
todo                              = "allow"
too_many_lines                    = "allow"
try_err                           = "allow"
unimplemented                     = "allow"
unnecessary_safety_comment        = "allow"
unnecessary_safety_doc            = "allow"
unreachable                       = "allow"
unwrap_in_result                  = "allow"
unwrap_used                       = "allow"
use_debug                         = "allow"
wildcard_enum_match_arm           = "allow"

[workspace.dependencies]
cstree = { features = [
  "derive",
  "lasso_compat",
  "multi_threaded_interning",
], git = "https://github.com/RGBCube/cstree" }

# TODO: Pick one of enumflags2 and enumset. I (RGBCube) added enumset2 for const support in ust.
archery              = "1.2.1"
arcstr               = "1.2.0"
async-once-cell      = "0.5.4"
async-trait          = "0.1.86"
bon                  = "3.6.4"
bytes                = "1.10.0"
clap                 = { features = [ "derive" ], version = "4.5.4" }
const-str            = "0.6.2"
dashmap              = "7.0.0-rc2"
derive_more          = { features = [ "full" ], version = "2.0.1" }
enumflags2           = "0.7.11"
enumset              = "1.1.3"
heck                 = "0.5.0"
hostname             = "0.4.1"
itertools            = "0.14.0"
itoa                 = "1.0.15"
libfuzzer-sys        = "0.4"
libp2p               = { features = [ "serde" ], version = "0.56.0" }
multibase            = "0.9.1"
num                  = "0.4.3"
num_enum             = "0.7.3"
paste                = "1.0.15"
peekmore             = "1.3.0"
phf                  = { features = [ "macros" ], version = "0.12.1" }
quote                = "1.0.40"
ringbuf              = "0.4.8"
rpds                 = "1.1.1"
rustc-hash           = "2.1.1"
serde                = { features = [ "derive" ], version = "1.0.219" }
smallvec             = "2.0.0-alpha.10"
stacksafe            = "0.1.4"
syn                  = "2.0.104"
terminal_size        = "0.4.1"
thiserror            = "2.0.12"
tokio                = { features = [ "full" ], version = "1.37.0" }
toml                 = "0.9.2"
tracing              = "0.1.41"
tracing-subscriber   = { features = [ "env-filter" ], version = "0.3.19" }
tun                  = { features = [ "async" ], version = "0.8.3" }
unic-emoji-char      = "0.9.0"
unicode-segmentation = "1.12.0"
unicode-width        = "0.2.0"
vu128                = "1.1.0"
which                = "8.0.0"
